<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Revel on A Humbly Arrogant Blog</title>
    <link>http://blog.humblyarrogant.io/categories/revel/</link>
    <description>Recent content in Revel on A Humbly Arrogant Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sat, 26 Apr 2014 20:39:14 -0400</lastBuildDate>
    
	<atom:link href="http://blog.humblyarrogant.io/categories/revel/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Revel : How to use Drone.io for testing</title>
      <link>http://blog.humblyarrogant.io/post/2014-04-26-revel-use-drone-io-for-testing/</link>
      <pubDate>Sat, 26 Apr 2014 20:39:14 -0400</pubDate>
      
      <guid>http://blog.humblyarrogant.io/post/2014-04-26-revel-use-drone-io-for-testing/</guid>
      <description>Being a lover of testing, continuous intergration, and cloud services. I wanted to be able to get a build of status of a Revel framework app I&amp;rsquo;m working on. Since Revel uses it&amp;rsquo;s own command to run and build applications the standard way of doing a build for Golang are out. I wanted to use Drone.io instead of travis so if I wanted to make it private I could without paying a lot.</description>
    </item>
    
    <item>
      <title>Revel : Force template format</title>
      <link>http://blog.humblyarrogant.io/post/2014-04-26-revel-force-template-format/</link>
      <pubDate>Sat, 26 Apr 2014 15:39:14 -0400</pubDate>
      
      <guid>http://blog.humblyarrogant.io/post/2014-04-26-revel-force-template-format/</guid>
      <description>So in Revel you can have your template in several different formats: html, json, xml, or txt. This is super awesome. As it allows you to send the same data and display different formats - Obivously. It also determines what template to use based on the http request headers that have been sent. So if your request sends that it accepts application/xml it&amp;rsquo;ll use xml and if you request says application/json it uses json.</description>
    </item>
    
  </channel>
</rss>